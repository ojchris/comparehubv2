<?php 
declare(strict_types = 1);

/**
 * @file
 * Functions to support theming in the comparenone theme.
 */

 /**
 * Implements hook_form_alter().
 */
function comparenone_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  
  // Change add-to-cart button text to 'Add to compare'
  if ($form_state->getBuildInfo()['callback_object'] instanceof \Drupal\commerce_cart\Form\AddToCartFormInterface) {
  $form[ 'actions' ][ 'submit' ][ '#value' ] = t( 'Add to Compare' );  
  }

  // Turn views exposed filter Textfield (product_brand) into a Select list
  if ($form['#id'] == 'views-exposed-form-discover-search-form') {
    
        $nids = \Drupal::entityQuery('node')->accessCheck(TRUE)->condition('type','brand')->execute();
        $nodes = \Drupal\node\Entity\Node::loadMultiple($nids);
        $options = ['' => 'Select brand'];
    
        foreach($nodes as $nid => $node) {
          $value = $node->get('field_brand_name')->getString();
    
          if (isset($value)) {
            $options[$value] = $value;
          }
        }
    
        if (isset($form['field_brand_name_value'])) {
          $form['field_brand_name_value']['#type'] = 'select';
          $form['field_brand_name_value']['#options'] = $options;
          $form['field_brand_name_value']['#size'] = 1;
        }
  }

   if ( $form['#form_id'] == 'user_login_form' ) {
    // Add css class to elements
    $form['actions']['submit']['#attributes']['class'][] = 'page-form-button';
    // Add placeholders.
    $form['name']['#attributes']['placeholder'] = t('Username');
    $form['pass']['#attributes']['placeholder'] = t('Password');

    // Add a new attritube
    $form['actions']['submit']['#attributes']['data-twig-form-submit'] = 'user-login-submit';
  }

  if ( $form['#form_id'] == 'views-exposed-form-discover-search-form' ) {
    $form['field_location_target_id']['#options']['All'] = t('Location');
  }

}

/**
 * Implements hook_form_USER_REGISTER_FORM_alter().
 */
function comparenone_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form['actions']['submit']['#value'] = t('Create account');

  if ( $form['#form_id'] == 'user_register_form' ) {
    // Add placeholders.
    $form['account']['name']['#attributes']['placeholder'] = t('Username');
    $form['account']['mail']['#attributes']['placeholder'] = t('Email');
  }

  // Add a new attritube
    $form['actions']['submit']['#attributes']['data-twig-form-submit'] = 'register-form-submit';
}

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function comparenone_preprocess_html(array &$variables): void {

}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function comparenone_preprocess_page(array &$variables): void {
    // Make 'title' variable available across all pages & nodes
    if(isset($variables['node'])) {
        $variables['title'] = $variables['node']->title->value;
    }
    else{
        $variables['title'] = $variables['page']['#title'];
    }
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function comparenone_preprocess_node(array &$variables): void {

}

/**
 * Implements hook_theme_suggestions_alter() for form templates.
 * Creates unique template suggestion for form. 
 * e.g. form--user-login-form.html.twig.
 */
function comparenone_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {

  if ($hook == 'form' & !empty($variables['element']['#id'])) {
    $suggestions[] = 'form__' . str_replace('-', '_', $variables['element']['#id']);
  }
}

/**
 * @param $suggestions
 * @param array $variables
  * Implements hook_theme_suggestions_input_alter() for user form templates.
 * Creates unique template suggestion for user form. 
 * e.g. input--submit--user-login-submit.html.twig, input--submit--register-form-submit.html.twig.
 */
function comparenone_theme_suggestions_input_alter(&$suggestions, array $variables) {
  $element = $variables['element'];

  if (isset($element['#attributes']['data-twig-form-submit'])) {
    $suggestions[] = 'input__' . $element['#type'] . '_' .  
    str_replace('-', '_', $element['#attributes']['data-twig-form-submit']); // without str_replace the suggestion is invalid 
  }
}

function comparenone_form_views_exposed_form_alter(&$form, &$form_state) {

     //Got the Form Id by using inspect element/Firebug
     if($form["#id"] == 'views-exposed-form-discover-search-form'){

         //field_location_target_id is the Filter Identifier Key
         $form['field_location_target_id']['#options']["All"] = 'Location';
         $form['field_product_category_target_id']['#options']["All"] = 'Select category';

     }


  }


